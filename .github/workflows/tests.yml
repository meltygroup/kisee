---

name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_ubuntu:
    strategy:
      matrix:
        tox:
          # As in kisee the coverage is full for each version, we
          # can run coverage independently for each version.
          #
          # Our tox.ini can combine coverage from multiple Python
          # versions, like: `tox -e py36,py37,py38,py39,coverage`
          # which is usefull if we need an `if sys.version >= ...`.
          #
          # But it would require some adjustment in this github
          # workflow, like using artifacts to gather the coverage
          # files, or installing multiple Pythons to let tox combine
          # them.
          - env: py36,coverage
            python-version: '3.6'
          - env: py37,coverage
            python-version: '3.7'
          - env: py38,coverage
            python-version: '3.8'
          - env: py39,coverage
            python-version: '3.9'
          - env: flake8,mypy,black,pylint,bandit,docs,isort
            python-version: '3.9'

    name: ${{ matrix.tox.env }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.tox.python-version }}
      - uses: actions/cache@v2
        with:
          path: |
            .venv
            .tox
          key: ${{ hashFiles('tox.ini') }}-${{ hashFiles('requirements-dev.txt') }}-${{ matrix.tox.python-version }}
      - name: setup tox
        run: |
          python --version
          python -m pip install --upgrade pip
          python -m pip install --upgrade tox
      - name: run ${{ matrix.tox.env }}
        run: |
          tox -q -e ${{ matrix.tox.env }} -p all
